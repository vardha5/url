<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>URL Shortener</title>
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="manifest" href="/site.webmanifest" />
  <meta name="twitter:creator" content="@yourtwitterhandle" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      background-color: whitesmoke;
    }

    .container {
      max-width: 600px;
      margin-top: 50px;
    }

    .card {
      border-radius: 10px;
    }
  </style>
</head>

<body>
  <%- include('navbar') %>
    <div class="container" style="min-height: 80vh;">
      <div id="alert"></div>
      <div class="card shadow p-4">
        <h2 class="text-center">ðŸ”— URL Shortener</h2>
        <p class="text-muted text-center">
          Enter a long URL and get a shortened version
        </p>

        <!-- URL Shortener Form -->
        <form onsubmit="shortenURL(event); return false;" class="mt-3">
          <div class="mb-3">
            <label for="url" class="form-label">Enter Long URL:</label>
            <input type="url" id="url" name="url" value="<%= longURL ? new URL(longURL).href : '' %>"
              class="form-control" placeholder="https://example.com" required />
          </div>
          <div class="mb-3"></div>
          <label for="toggleCustomURL" class="form-label">Want a Custom Short URL?</label>
          <select id="toggleCustomURL" class="form-select" onchange="toggleCustomURLInput(this.value)">
            <option value="no" selected>No</option>
            <option value="yes">Yes</option>
          </select>
          <div id="customURLContainer" class="my-4" style="display: none;">
            <label for="customURL" class="form-label ">Custom Short URL (6-8 characters):</label>
            <input type="text" id="customURL" name="customURL" class="form-control"
              placeholder="Enter custom alias (optional)" pattern="^[a-zA-Z0-9_-]{4,8}$"
              title="Custom URL must be 6-8 characters long and can include letters, numbers, hyphens, and underscores." />
          </div>
          <script>
            function toggleCustomURLInput(value) {
              const customURLContainer = document.getElementById("customURLContainer");
              if (value === "yes") {
                customURLContainer.style.display = "block";
              } else {
                customURLContainer.style.display = "none";
              }
            }
          </script>
      </div>
      <button type="submit" class="btn btn-primary w-100 my-4">
        Shorten URL
      </button>
      </form>
    </div>
    <div id="newURL" class="card shadow p-4 mt-4" style="display: none">
      <!-- Long URL -->
      <h3 class="mt-4">Main URL:</h3>
      <div class="input-group mb-3">
        <input type="text" id="longURL" class="form-control" readonly />
      </div>
      <!-- Close the first input group -->
      <h3 class="mt-4">Shortened URL:</h3>
      <div class="input-group mb-3">
        <input type="text" id="shortenedURL" class="form-control" readonly />
        <button class="btn btn-outline-secondary" type="button"
          onclick="copyToClipboard(document.getElementById('shortenedURL').value)">
          Copy
        </button>
      </div>
    </div>
    <!-- </div> -->

    <script>
      if (!localStorage.getItem("token")) {
        window.location.href = "/auth/page/login";
      }
      function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
          alert("Shortened URL copied to clipboard!");
        });
      }
      let shortUrl;
      const shortenURL = async (event) => {
        const url = document.getElementById("url").value;
        const customUrl = document.getElementById("customURL").value;
        console.log(customUrl) // Get the custom URL value
        const response = await fetch(`/api/url/${encodeURIComponent(url)}?customURL=${customUrl}`, { // Pass customUrl in the request
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        });
        const data = await response.json();
        if (data.message) {
          const alertDiv = document.getElementById("alert");
          alertDiv.innerHTML = `<%- include('Alert/alert', { message: "Unable to process the request!", type: 'error' }) %>`;

          // Ensure to handle the scenario where the token is missing
          return; // Prevent further execution if login is required.
        } else if (data.customUrlError) { // Check for custom URL error
          const alertDiv = document.getElementById("alert");
          alertDiv.innerHTML = `<%- include('Alert/alert', { message: "Custom URL is already taken!", type: 'error' }) %>`;
          return; // Prevent further execution if custom URL is invalid
        } else {
          document.getElementById("newURL").style.display = "block";
          document.getElementById("longURL").value = data.longURL;
          document.getElementById(
            "shortenedURL"
          ).value = `${window.location.origin}/${data.shortURL}`;
          shortUrl = `${window.location.origin}/${data.shortURL}`;
          // Optional: Clear previous error messages if any
          document.getElementById("alert").innerHTML = "";

          document.getElementById("url").value = "";
          generateQRCode(); // Call to generate QR code after getting the shortened URL
        }
      };
      const generateQRCode = async () => {
        // console.log("hello",document.getElementById("shortenedURL").value); // Log the shortened URL value
        // const url = .getElementById("shortenedURL").value; // Move the declaration here
        const url = shortUrl;
        try {
          const response = await fetch(
            `/api/qr?url=${encodeURIComponent(url)}`,
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${localStorage.getItem("token")}`,
              },
            }
          );
          const blob = await response.blob(); // Process the response as a blob
          const qrCodeUrl = URL.createObjectURL(blob); // Create a URL for the blob
          if (qrCodeUrl) {
            // Check if the QR code URL is created
            // Display the QR code
            const qrCodeImage = document.createElement("img");
            qrCodeImage.src = qrCodeUrl;
            qrCodeImage.style = "display: block; margin: 0 auto;height:200px;"; // Center the image
            qrCodeImage.alt = "Generated QR Code";

            document.getElementById("newURL").appendChild(qrCodeImage);
            // Add the QR code image to the 'newURL' div
            const downloadLink = document.createElement("a");
            downloadLink.href = qrCodeUrl;
            downloadLink.download = "qr-code.png";
            downloadLink.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
  <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"/>
  <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"/>
</svg>`;
            downloadLink.innerText = "Download QR Code";
            downloadLink.style = "display: block; margin: 0 auto;"; // Center the link with a background color
            document.getElementById("newURL").appendChild(downloadLink);
          } else {
            console.error("QR Code not generated"); // Handle the error case
          }
        } catch (error) {
          console.error(error);
        }
      };
    </script>
    <%-include("footer")-%>
</body>

</html>